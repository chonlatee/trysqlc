// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: book.sql

package dbgen

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getBook = `-- name: GetBook :one
select b.id, b.author, b.title, b.description, b.price, b.created_datetime, b.updated_datetime, b.revoke_datetime, a.id as author_id, a.created_datetime as author_created_datetime, a.updated_datetime as author_update_datetime 
from books as b join authors as a on b.author = a.id where b.id = $1 limit 1
`

type GetBookRow struct {
	ID                    pgtype.UUID
	Author                pgtype.UUID
	Title                 string
	Description           pgtype.Text
	Price                 pgtype.Numeric
	CreatedDatetime       pgtype.Timestamptz
	UpdatedDatetime       pgtype.Timestamptz
	RevokeDatetime        pgtype.Timestamptz
	AuthorID              pgtype.UUID
	AuthorCreatedDatetime pgtype.Timestamptz
	AuthorUpdateDatetime  pgtype.Timestamptz
}

func (q *Queries) GetBook(ctx context.Context, id pgtype.UUID) (GetBookRow, error) {
	row := q.db.QueryRow(ctx, getBook, id)
	var i GetBookRow
	err := row.Scan(
		&i.ID,
		&i.Author,
		&i.Title,
		&i.Description,
		&i.Price,
		&i.CreatedDatetime,
		&i.UpdatedDatetime,
		&i.RevokeDatetime,
		&i.AuthorID,
		&i.AuthorCreatedDatetime,
		&i.AuthorUpdateDatetime,
	)
	return i, err
}

const insertBook = `-- name: InsertBook :one
insert into books (
    id, author, title, description, price, updated_datetime
) values ($1, $2, $3, $4, $5, now()) returning id, author, title, description, price, created_datetime, updated_datetime, revoke_datetime
`

type InsertBookParams struct {
	ID          pgtype.UUID
	Author      pgtype.UUID
	Title       string
	Description pgtype.Text
	Price       pgtype.Numeric
}

func (q *Queries) InsertBook(ctx context.Context, arg InsertBookParams) (Book, error) {
	row := q.db.QueryRow(ctx, insertBook,
		arg.ID,
		arg.Author,
		arg.Title,
		arg.Description,
		arg.Price,
	)
	var i Book
	err := row.Scan(
		&i.ID,
		&i.Author,
		&i.Title,
		&i.Description,
		&i.Price,
		&i.CreatedDatetime,
		&i.UpdatedDatetime,
		&i.RevokeDatetime,
	)
	return i, err
}
